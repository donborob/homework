import config.DatabaseConfig;
import dao.UserDao;
import model.User;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.context.ApplicationContext;
import org.springframework.context.support.ClassPathXmlApplicationContext;

import java.io.IOException;
import java.sql.*;

public class Starter {
    @Autowired
   private static DatabaseConfig config;

    public static void main(String args[]) throws SQLException, IOException, ClassNotFoundException, IllegalAccessException, InstantiationException {
        ApplicationContext context = new ClassPathXmlApplicationContext("applicationContext.xml");
        Starter starter = (Starter) context.getBean("starter");
        starter.createTables();
        UserDao userDao =  new UserDao();
        System.out.println("USER COUNT = " + userDao.getCount());
        System.out.println("***********************");
        userDao.create(new User("Tolstoy", "Lev", 19));
        userDao.create(new User("Ivanov","Ivan",23));
        System.out.println("USER COUNT = " + userDao.getCount());
        System.out.println("***********************");
        for (int i = 0; i<userDao.getAll().size(); i++) {
            System.out.println("USERS: " + userDao.getAll().get(i).toString());
        }
        System.out.println("***********************");
        userDao.delete(1);
        User user = userDao.get(2);
        user.setAge(59);
        user.setFirstname("Pavel");
        userDao.update(user, user.getId());
        for (int i = 0; i<userDao.getAll().size(); i++) {
            System.out.println("USERS: " + userDao.getAll().get(i).toString());
        }
        System.out.println("***********************");
        System.out.println("USER COUNT = " + userDao.getCount());

    }

    private static void println(String s) {
    }

    public  void createTables() throws SQLException, ClassNotFoundException, IllegalAccessException, InstantiationException {
        Connection connection = DriverManager.getConnection("jdbc:derby:dbDev;create=true");
        Statement statement = connection.createStatement();
        String sql = "CREATE TABLE USERS ("
                + "id INTEGER NOT NULL GENERATED ALWAYS AS IDENTITY (START WITH 1, INCREMENT BY 1),"
                + "firstname VARCHAR(255) not NULL,"
                + "lastname VARCHAR(255) NOT NULL ,"
                + "age INTEGER,"
                + "PRIMARY KEY(id))";
        try {
            statement.execute(sql);
        }
        catch (SQLException e){
            if (!e.getSQLState().equals("X0Y32")) {
                throw e;
            }
        }
        sql = "CREATE TABLE ORDERS ("
                + "id INTEGER NOT NULL GENERATED BY DEFAULT AS IDENTITY (START WITH 1, INCREMENT BY 1),"
                + "sellerId INTEGER not NULL,"
                + "customerId INTEGER not NULL,"
                + "totalAmount INTEGER,"
                + "PRIMARY KEY(id))";
        try {
            statement.execute(sql);
        }
        catch (SQLException e){
            if (!e.getSQLState().equals("X0Y32")) {
                throw e;
            }
        }
    }
}
